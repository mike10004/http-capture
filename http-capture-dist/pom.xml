<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>http-capture</artifactId>
        <groupId>com.github.mike10004</groupId>
        <version>0.1</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>http-capture-dist</artifactId>
    <packaging>pom</packaging>
    <name>http-capture-dist</name>
    <properties>
        <app.name>${project.parent.name}</app.name>
        <package.name>${app.name}</package.name>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.build.timestamp.format>yyyyMMddHHmmssZ</maven.build.timestamp.format>
        <timestamp.clean>${maven.build.timestamp}</timestamp.clean> <!-- https://stackoverflow.com/a/13228882/2657036 -->
        <dist.version>${project.version}-${maven.build.timestamp}</dist.version>
        <skip.dist.tests>false</skip.dist.tests>
        <skip.verify-git>true</skip.verify-git>
        <package.revision>1</package.revision>
        <maven.phase.file>${project.build.directory}/maven-phase.txt</maven.phase.file>
        <python.executable>python3</python.executable>
    </properties>
    <profiles>
        <profile>
            <id>release-profile</id>
            <properties>
                <dist.version>${project.version}</dist.version>
                <skip.verify-git>false</skip.verify-git>
            </properties>
        </profile>
        <profile>
            <id>windows-build</id>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <properties>
                <skip.dist.tests>true</skip.dist.tests>
                <python.executable>python</python.executable>
            </properties>
        </profile>
    </profiles>
    <build>
        <plugins>
            <!--
                 this artifact has packaging=pom, which normally disables the compile,
                 surefire, and failsafe plugins, so we explicitly enable them here
            -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <id>force-test-compile</id>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                </configuration>
                <executions>
                    <execution>
                        <id>force-surefire-test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <skipTests>${build.platform.nonLinux}</skipTests>
                    <systemPropertyVariables>
                        <maven.project.version>${project.version}</maven.project.version>
                        <!--suppress MavenModelInspection -->
                        <deb.pathname.release>${project.build.directory}/${package.name}_${parsedVersion.majorVersion}.${parsedVersion.minorVersion}-${package.revision}_all.deb</deb.pathname.release>
                        <!--suppress MavenModelInspection -->
                        <deb.pathname.snapshot>${project.build.directory}/${package.name}_${parsedVersion.majorVersion}.${parsedVersion.minorVersion}+${maven.build.timestamp}-${package.revision}_all.deb</deb.pathname.snapshot>
                    </systemPropertyVariables>
                </configuration>
                <executions>
                    <execution>
                        <id>failsafe-integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>failsafe-verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.1.15</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dotGitDirectory>${project.basedir}/../.git</dotGitDirectory>
                    <dateFormat>yyyy-MM-dd'T'HH:mm:ss z</dateFormat>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.directory}/deb/usr/share/${package.name}/build.properties</generateGitPropertiesFilename>
                    <!--this is true by default; You may want to set this to false, if the plugin should run inside a
                        <packaging>pom</packaging> project. Most projects won't need to override this property.
                        For a use-case for this kind of behaviour see: https://github.com/ktoso/maven-git-commit-id-plugin/issues/21 -->
                    <skipPoms>false</skipPoms>
                    <failOnNoGitDirectory>false</failOnNoGitDirectory>
                    <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>stage-libraries</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/deb/usr/share/${package.name}/lib</outputDirectory>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>write-classpath</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${python.executable}</executable>
                            <arguments>
                                <argument>${project.basedir}/src/main/script/write_classpath.py</argument>
                                <argument>${project.build.directory}/deb</argument>
                                <argument>${project.build.directory}/deb/usr/share/${package.name}/lib</argument>
                                <argument>${project.build.directory}/deb/usr/share/${package.name}/classpath-arg.txt</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-deb-sources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/deb</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/main/deb</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>force-test-resources</id>
                        <goals>
                            <goal>testResources</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!--
                  This plugin's configuration must come *after* the Maven Resources
                  Plugin, and *before* the Debian Maven Plugin.
                -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>fix-permissions</id>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <chmod perm="0755" verbose="true">
                                    <fileset dir="${project.build.directory}/deb">
                                        <include name="**/bin/*"/>
                                        <include name="**/sbin/*"/>
                                        <include name="DEBIAN/post*"/>
                                        <include name="DEBIAN/pre*"/>
                                    </fileset>
                                </chmod>
                            </target>
                        </configuration>
                        <goals><goal>run</goal></goals>
                    </execution>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!--suppress MavenModelInspection -->
                                <echo>project.isSnapshotBuild=${project.isSnapshotBuild}</echo>
                                <!--suppress MavenModelInspection -->
                                <echo>project.isReleaseBuild=${project.isReleaseBuild}</echo>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.mike10004</groupId>
                <artifactId>debian-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>build-deb</id>
                        <phase>package</phase>
                        <goals>
                            <goal>package</goal>
                        </goals>
                        <configuration>
                            <packageName>${package.name}</packageName>
                            <packageTitle>Capturing HTTP Proxy Server</packageTitle>
                            <packageRevision>${package.revision}</packageRevision>
                            <packageDescription>HTTP proxy server that captures traffic to disk</packageDescription>
                            <projectUrl>https://github.com/mike10004/${package.name}</projectUrl>
                            <projectOrganization>Unorganized Developers</projectOrganization>
                            <maintainerName>Mike Chaberski</maintainerName>
                            <maintainerEmail>mchaberski@gmail.com</maintainerEmail>
                            <includeAttachedArtifacts>false</includeAttachedArtifacts>
                            <excludeAllDependencies>true</excludeAllDependencies>
                            <excludeAllArtifacts>true</excludeAllArtifacts>
                            <snapshotRevision>+${maven.build.timestamp}</snapshotRevision>
                            <packageDependencies>
                                <package>default-jre-headless</package>
                            </packageDependencies>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>check-is-snapshot-build</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <name>project.isSnapshotBuild</name>
                            <regex>.*-SNAPSHOT</regex>
                            <value>${project.version}</value>
                            <replacement>true</replacement>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                    <execution>
                        <id>check-is-release-build</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <name>project.isReleaseBuild</name>
                            <regex>^((?!SNAPSHOT).)*$</regex>
                            <value>${project.version}</value>
                            <replacement>true</replacement>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                    <execution>
                        <id>parse-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>attach-artifacts-release</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <configuration>
                            <!--suppress MavenModelInspection -->
                            <skipAttach>${project.isSnapshotBuild}</skipAttach>
                            <artifacts>
                                <artifact>
                                    <!--suppress MavenModelInspection -->
                                    <file>${project.build.directory}/${package.name}_${parsedVersion.majorVersion}.${parsedVersion.minorVersion}-${package.revision}_all.deb</file>
                                    <type>deb</type>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                    <execution>
                        <id>attach-artifacts-snapshot</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <configuration>
                            <!--suppress MavenModelInspection -->
                            <skipAttach>${project.isReleaseBuild}</skipAttach>
                            <artifacts>
                                <artifact>
                                    <!--suppress MavenModelInspection -->
                                    <file>${project.build.directory}/${package.name}_${parsedVersion.majorVersion}.${parsedVersion.minorVersion}+${maven.build.timestamp}-${package.revision}_all.deb</file>
                                    <type>deb</type>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <excludes>
                    <exclude>**/*.properties</exclude>
                </excludes>
                <filtering>false</filtering>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                </includes>
                <filtering>true</filtering>
            </testResource>
        </testResources>
    </build>
    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>http-capture-exec</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>http-capture-testing</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>